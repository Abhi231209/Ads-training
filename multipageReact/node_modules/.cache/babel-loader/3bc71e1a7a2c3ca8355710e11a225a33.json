{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\visha\\\\Documents\\\\Git\\\\Ads-training\\\\multipageReact\\\\src\\\\Quotes\\\\components\\\\comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllComments);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  let comments;\n\n  if (status === 'pending') {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \"No comments were added yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: quoteId,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), comments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"HrsqoF+cz5x+W3JvLxHQ6yWqDAQ=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","useEffect","useCallback","useParams","classes","NewCommentForm","useHttp","getAllComments","LoadingSpinner","CommentsList","Comments","isAddingComment","setIsAddingComment","params","quoteId","sendRequest","status","data","loadedComments","startAddCommentHandler","addedCommentHandler","comments","length"],"sources":["C:/Users/visha/Documents/Git/Ads-training/multipageReact/src/Quotes/components/comments/Comments.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport classes from './Comments.module.css';\r\nimport NewCommentForm from './NewCommentForm';\r\nimport useHttp from '../../hooks/use-http';\r\nimport { getAllComments } from '../../lib/api';\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\nimport CommentsList from './CommentsList';\r\n\r\nconst Comments = () => {\r\n  const [isAddingComment, setIsAddingComment] = useState(false);\r\n  const params = useParams();\r\n\r\n  const { quoteId } = params;\r\n\r\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [quoteId, sendRequest]);\r\n\r\n  const startAddCommentHandler = () => {\r\n    setIsAddingComment(true);\r\n  };\r\n\r\n  const addedCommentHandler = useCallback(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  let comments;\r\n\r\n  if (status === 'pending') {\r\n    comments = (\r\n      <div className='centered'>\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\r\n    comments = <CommentsList comments={loadedComments} />;\r\n  }\r\n\r\n  if (\r\n    status === 'completed' &&\r\n    (!loadedComments || loadedComments.length === 0)\r\n  ) {\r\n    comments = <p className='centered'>No comments were added yet!</p>;\r\n  }\r\n\r\n  return (\r\n    <section className={classes.comments}>\r\n      <h2>User Comments</h2>\r\n      {!isAddingComment && (\r\n        <button className='btn' onClick={startAddCommentHandler}>\r\n          Add a Comment\r\n        </button>\r\n      )}\r\n      {isAddingComment && (\r\n        <NewCommentForm\r\n          quoteId={quoteId}\r\n          onAddedComment={addedCommentHandler}\r\n        />\r\n      )}\r\n      {comments}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Comments;"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,KAAD,CAAtD;EACA,MAAMa,MAAM,GAAGV,SAAS,EAAxB;EAEA,MAAM;IAAEW;EAAF,IAAcD,MAApB;EAEA,MAAM;IAAEE,WAAF;IAAeC,MAAf;IAAuBC,IAAI,EAAEC;EAA7B,IAAgDZ,OAAO,CAACC,cAAD,CAA7D;EAEAN,SAAS,CAAC,MAAM;IACdc,WAAW,CAACD,OAAD,CAAX;EACD,CAFQ,EAEN,CAACA,OAAD,EAAUC,WAAV,CAFM,CAAT;;EAIA,MAAMI,sBAAsB,GAAG,MAAM;IACnCP,kBAAkB,CAAC,IAAD,CAAlB;EACD,CAFD;;EAIA,MAAMQ,mBAAmB,GAAGlB,WAAW,CAAC,MAAM;IAC5Ca,WAAW,CAACD,OAAD,CAAX;EACD,CAFsC,EAEpC,CAACC,WAAD,EAAcD,OAAd,CAFoC,CAAvC;EAIA,IAAIO,QAAJ;;EAEA,IAAIL,MAAM,KAAK,SAAf,EAA0B;IACxBK,QAAQ,gBACN;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EAED,IAAIL,MAAM,KAAK,WAAX,IAA0BE,cAA1B,IAA4CA,cAAc,CAACI,MAAf,GAAwB,CAAxE,EAA2E;IACzED,QAAQ,gBAAG,QAAC,YAAD;MAAc,QAAQ,EAAEH;IAAxB;MAAA;MAAA;MAAA;IAAA,QAAX;EACD;;EAED,IACEF,MAAM,KAAK,WAAX,KACC,CAACE,cAAD,IAAmBA,cAAc,CAACI,MAAf,KAA0B,CAD9C,CADF,EAGE;IACAD,QAAQ,gBAAG;MAAG,SAAS,EAAC,UAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAX;EACD;;EAED,oBACE;IAAS,SAAS,EAAEjB,OAAO,CAACiB,QAA5B;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEG,CAACV,eAAD,iBACC;MAAQ,SAAS,EAAC,KAAlB;MAAwB,OAAO,EAAEQ,sBAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,EAOGR,eAAe,iBACd,QAAC,cAAD;MACE,OAAO,EAAEG,OADX;MAEE,cAAc,EAAEM;IAFlB;MAAA;MAAA;MAAA;IAAA,QARJ,EAaGC,QAbH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CA1DD;;GAAMX,Q;UAEWP,S,EAIuCG,O;;;KANlDI,Q;AA4DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}